// Copyright (c) 2019, Levius Tecnologia Ltda. All rights reserved.
// Author: Samuel C. Schwebel

syntax = "proto3";

package auge.protobuf;

import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";

import "general/organization.proto";
import "general/group.proto";
import "general/user.proto";
import "general/unit_of_measurement.proto";
import "objective/objective_measure.proto";

/// WORK
// The service definition.
service WorkService {

    rpc GetWorks (WorkGetRequest) returns (WorksResponse) {}
  //  rpc GetWork (WorkGetRequest) returns (Work) {}

    rpc CreateWork (WorkRequest) returns (google.protobuf.StringValue) {}
    rpc UpdateWork (WorkRequest) returns (google.protobuf.Empty) {}
    rpc DeleteWork (WorkDeleteRequest) returns (google.protobuf.Empty) {}

}

// Message to respective domain object.
message Work {
    // Base
    string id = 1;
    int32 version = 2;

    // Specific
    string name = 3;
    string description = 4;
    bool archived = 5;
    repeated WorkStage work_stages = 6;
    repeated WorkItem work_items = 7;

    Objective objective = 8;
    Organization organization = 9;
    Group group = 10;
    User leader = 11;

}

// Request related for model domain
message WorkRequest {
    Work work = 1;
    string auth_user_id = 2;
    string auth_organization_id = 3;
}

// Request message for delete related for model domain
message WorkDeleteRequest {
    string work_id = 1;
    int32 work_version = 2;
    string auth_user_id = 3;
    string auth_organization_id = 4;
}

// Response list of the works
message WorksResponse {
    repeated Work works = 1;
}

enum CustomWork {
    workOnlySpecification = 0;
    workOnlySpecificationAndLeaderUserNotificationEmailIdiom = 1;
    workOnlyWithWorkItems = 2;
    workWithWorkItems = 3;
    workWithWorkItemsAndStages = 4;
}

// Request for query param
message WorkGetRequest {
    string id = 1;
    string organization_id = 2;
    string work_item_id = 3;
    string objective_id = 4;
    CustomWork custom_work = 5;
    bool with_archived = 6;
    repeated string group_ids = 7;
    repeated string leader_user_ids = 8;
    bool work_item_with_archived = 9;
    repeated string work_item_assigned_to_ids = 10;
}

// The service definition.
service WorkItemService {

    rpc GetWorkItems (WorkItemGetRequest) returns (WorkItemsResponse) {}
  //  rpc GetWorkItem (WorkItemGetRequest) returns (WorkItem) {}

    rpc CreateWorkItem (WorkItemRequest) returns (google.protobuf.StringValue) {}
    rpc UpdateWorkItem (WorkItemRequest) returns (google.protobuf.Empty) {}
    rpc DeleteWorkItem (WorkItemDeleteRequest) returns (google.protobuf.Empty) {}
    // rpc SoftDeleteWorkItem (WorkItem) returns (google.protobuf.Empty) {} // Normally returns Empty, but as this system uses "soft delete" approach, must be returned the resource updated.

    rpc GetWorkItemAttachment (WorkItemAttachmentGetRequest) returns (WorkItemAttachment) {}
    rpc GetWorkItemCheckItems (WorkItemCheckItemGetRequest) returns (WorkItemCheckItemsResponse) {}

    rpc GetWorkItemValues (WorkItemValueGetRequest) returns (WorkItemValuesResponse) {}
   // rpc GetWorkItemValue (WorkItemValueGetRequest) returns (WorkItemValue) {}

    rpc CreateWorkItemValue (WorkItemValueRequest) returns (google.protobuf.StringValue) {}
    rpc UpdateWorkItemValue (WorkItemValueRequest) returns (google.protobuf.Empty) {}
    rpc DeleteWorkItemValue (WorkItemValueDeleteRequest) returns (google.protobuf.Empty) {}
   // rpc DeleteWorkItemValue (WorkItemValueRequest) returns (google.protobuf.Empty) {}

}

/// WORKITEM
// Message to respective domain object.
message WorkItem {

    // Base
    string id = 1;
    int32 version = 2;

    // Specific
    string name = 3;
    string description = 4;
    google.protobuf.Timestamp due_date = 5;
    double planned_value = 6;
    double actual_value = 7;
    UnitOfMeasurement unit_of_measurement = 8;
    bool archived = 9;
    WorkStage work_stage = 10;

    repeated User assigned_to = 11;
    repeated WorkItemCheckItem check_items = 12;
    repeated WorkItemAttachment attachments = 13;

    Work work = 14;
}

// Request for query Restrict
message WorkItemRequest {
    WorkItem work_item = 1;
  //  string work_id = 2; // used just to identify parent on request
    string auth_user_id = 2;
    string auth_organization_id = 3;
}

// Request message for delete related to domain model
message WorkItemDeleteRequest {
    string work_item_id = 1;
    int32 work_item_version = 2;
    string auth_user_id = 3;
    string auth_organization_id = 4;
}

// Response list of the WorkItems
message WorkItemsResponse {
    repeated WorkItem workItems = 1;
    //bool webWorkAround = 2;
}

enum CustomWorkItem {
    workItemOnlySpecification = 0;
    workItemWithoutWork = 1;
}

// Request for Work Item
message WorkItemGetRequest {
    string id = 1;
    string work_id = 2;
    string organization_id = 3;
    CustomWorkItem custom_work_item = 4;
    bool with_archived = 5;
    repeated string assigned_to_ids = 6;
}

// Message to respective domain object.
message WorkItemAttachment {

    // Base
    string id = 1;

    // Specific
    string name = 2;
    string type = 3;
    string content = 4;
}

// Response list of the WorkItemAttachment
message WorkItemAttachmentsResponse {
    repeated WorkItemAttachment work_item_attachments = 1;
}

// Request for query param
message WorkItemAttachmentGetRequest {
    // Base
    string id = 1;
    string work_item_id = 2;
    bool with_content = 3;
}

// Message to respective domain object.
message WorkItemCheckItem {

    // Base
    string id = 1;

    // Specific
    string name = 2;
    bool finished = 3;

    // Define check item order
    int32 index = 4;
   // string work_item_check_item_id = 6; // Just to pass parent id
}

// Request for query Restrict
message WorkItemCheckItemRequest {
    WorkItemCheckItem work_item_check_item = 1;
   // string work_item_id = 2; // used just to identify parent on request
    string auth_user_id = 2;
    string auth_organization_id = 3;
}

// Response list of the WorkItemCheckItems
message WorkItemCheckItemsResponse {
    repeated WorkItemCheckItem work_item_check_items = 1;
}

// Request for query param
message WorkItemCheckItemGetRequest {
    // Base
    string id = 1;
    string work_item_id = 2;
}

/// WORKSTAGE
// The service definition.
service WorkStageService {
    rpc GetWorkStages (WorkStageGetRequest) returns (WorkStagesResponse) {}
  //  rpc GetWorkStage (WorkStageGetRequest) returns (WorkStage) {}

    rpc CreateWorkStage (WorkStageRequest) returns (google.protobuf.StringValue) {}
    rpc UpdateWorkStage (WorkStageRequest) returns (google.protobuf.Empty) {}
    rpc DeleteWorkStage (WorkStageDeleteRequest) returns (google.protobuf.Empty) {}
}

// Message to respective domain object.
message WorkStage {
    // Base
    string id = 1;
    int32 version = 2;

    // Specific
    string name = 3;
    int32 state_index = 4;

    // Define work stage order
    int32 index = 5;

    Work work = 6;
}

// Request related for model domain
message WorkStageRequest {
    WorkStage work_stage = 1;
    //string work_id = 2;
    string auth_user_id = 2;
    string auth_organization_id = 3;
}

// Request message for delete related for model domain
message WorkStageDeleteRequest {
    string work_stage_id = 1;
    int32 work_stage_version = 2;
    string auth_user_id = 3;
    string auth_organization_id = 4;
}

// Response list of the stages
message WorkStagesResponse {
    repeated WorkStage work_stages = 1;
}

enum CustomWorkStage {
    workStageOnlySpecification = 0;
    workStageWithoutWork = 1;
}

// Request for query param
message WorkStageGetRequest {

    string id = 1;
    string work_id = 2;

    CustomWorkStage custom_work_stage = 3;
}

/// *** WORKITEMVALUE
// Message to respective domain object.
message WorkItemValue {
    // Base
    string id = 1;
    int32 version = 2;

    // Specific
    google.protobuf.Timestamp date = 3;
    double actual_value = 4;
    string comment = 5;

    WorkItem work_item = 6;
}

// Message to request param related to domain object.
message WorkItemValueRequest {
    WorkItemValue work_item_value = 1;
  //  string work_item_id = 2; // used just to identify parent on request
    string auth_user_id = 2;
    string auth_organization_id = 3;
}

// Message request for delete to related domain model .
message WorkItemValueDeleteRequest {
    string work_item_value_id = 1;
    int32 work_item_value_version = 2;
    string auth_user_id = 3;
    string auth_organization_id = 4;
}

// Response list of the WorkItemValue
message WorkItemValuesResponse {
    repeated WorkItemValue work_item_values = 1;
}

enum CustomWorkItemValue {
    workItemValueWithoutWorkItem = 0;
}

// Request for query Restrict
message WorkItemValueGetRequest {
    string id = 1;
    string work_item_id = 2;
    CustomWorkItemValue custom_work_item_value = 3;
}